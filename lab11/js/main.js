// Added multiple debugging methods
(function() {
    // First method: window alert for very early debugging
    alert("Script is being loaded!");

    // Logging to console
    console.log("Script is loaded successfully!");
    console.warn("Debugging started");

    // Attach logging to window for global access
    window.debugLog = function(message) {
        console.log(message);
        alert(message);
    };

    // Debugging wrapper for tasks
    function safeTaskExecute(taskFunction) {
        try {
            debugLog("Attempting to execute task");
            taskFunction();
        } catch (error) {
            console.error("Error in task:", error);
            alert("Error: " + error.message);
        }
    }

    // Modify existing tasks to use safe execution
    window.task1 = function() {
        safeTaskExecute(function() {
            debugLog("Task 1 started");
            let n = parseInt(prompt("–í–≤–µ–¥—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä n –¥–ª—è –∑–∞–≤–¥–∞–Ω–Ω—è 1:"));
            
            if (isNaN(n) || n <= 0) {
                throw new Error("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –≤–≤–µ–¥–µ–Ω–Ω—è");
            }
            
            let result = "";
            for (let i = 1; i <= n; i++) {
                result += "1".repeat(i) + "\n";
            }
            
            debugLog("–ó–∞–≤–¥–∞–Ω–Ω—è 1 (–†—è–¥–æ–∫ —Ü–∏—Ñ—Ä):\n" + result);
        });
    };

    window.task2 = function() {
        safeTaskExecute(function() {
            debugLog("Task 2 started");
            let n = parseInt(prompt("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ n –¥–ª—è –∑–∞–≤–¥–∞–Ω–Ω—è 2:"));
            
            if (isNaN(n) || n <= 0) {
                throw new Error("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –≤–≤–µ–¥–µ–Ω–Ω—è");
            }
            
            let sum = 0;
            for (let i = 1; i <= n; i++) {
                sum += 1 / i;
            }
            
            debugLog(`–ó–∞–≤–¥–∞–Ω–Ω—è 2 (–°—É–º–∞ —Ä—è–¥—É): S = ${sum.toFixed(4)}`);
        });
    };

    window.task3 = function() {
        safeTaskExecute(function() {
            debugLog("Task 3 started");
            const randomNumber = Math.floor(Math.random() * 100) + 1;
            let attempts = 0;
            let userGuess;
            
            do {
                userGuess = parseInt(prompt("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 100:"));
                attempts++;
                
                if (userGuess > randomNumber) {
                    debugLog("–ú–µ–Ω—à–µ!");
                } else if (userGuess < randomNumber) {
                    debugLog("–ë—ñ–ª—å—à–µ!");
                } else {
                    debugLog(`–í—ñ—Ç–∞—é! –í–∏ –≤–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${randomNumber} –∑–∞ ${attempts} —Å–ø—Ä–æ–±.`);
                }
            } while (userGuess !== randomNumber);
        });
    };

    // Final startup log
    console.log("üöÄ Script initialization complete!");
})();